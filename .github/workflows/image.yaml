name: Build image

on: 
 push:
 pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
       include:
         - flavor: "opensuse"
         - flavor: "alpine"
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow
      - name: setup-docker
        uses: docker-practice/actions-setup-docker@master
      - name: Release space from worker
        run: |
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
      - name: Login to Quay Registry
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
      - name: Build  ðŸ”§
        env:
          FLAVOR: ${{ matrix.flavor }}
          IMAGE: quay.io/mudler/c3os:${{ matrix.flavor }}-latest
        run: |
          bash build.sh
      - uses: actions/upload-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.iso.zip
          path: |
            *.iso
            *.sha256
          if-no-files-found: error
      - name: Push to quay
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: | 
          docker push quay.io/mudler/c3os:${{ matrix.flavor }}-latest

# Test start
  build-vm-images:
    needs: build
    runs-on: macos-10.15
    strategy:
      fail-fast: false
      matrix:
       include:
         - flavor: "opensuse"
         - flavor: "alpine"
    steps:
      - uses: actions/checkout@v2
      - name: Install deps
        run: |
          brew install hudochenkov/sshpass/sshpass
          brew install qemu
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.iso.zip
      - run: |
              ls -liah
              iso=$(ls *.iso)
              sh build_vm.sh $iso
      - uses: actions/upload-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.qcow2
          path: |
            *.qcow2
      - uses: actions/upload-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.ova
          path: |
            *.ova
          if-no-files-found: error

  prepare-test:
    runs-on: ubuntu-latest
    needs: build-vm-images
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - run: |
          go build -o c3os ./installer/
          ./c3os create-config > config.yaml
      - uses: actions/upload-artifact@v2
        with:
          name: config.yaml
          path: config.yaml
          if-no-files-found: error

  driver:
    needs: prepare-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - run: |
          go build -o c3os ./installer/
          curl -L https://raw.githubusercontent.com/mudler/edgevpn/master/install.sh | sudo INSTALL_BIN_DIR=/usr/bin sh
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: config.yaml
      - name: Connect
        run: |
          export EDGEVPNTOKEN=$(docker run --rm -v "${PWD}":/workdir mikefarah/yq '.c3os.network_token' config.yaml)
          echo "Token $EDGEVPNTOKEN"
          sudo sysctl -w net.core.rmem_max=2500000
          sudo -E edgevpn --dhcp --api &
      - name: "Test"
        run: |
          bash ./.github/test.sh

  cluster-nodes:
    needs: prepare-test
    runs-on: macos-10.15
    strategy:
      fail-fast: true
      matrix:
       include:
         - flavor: "opensuse"
           node: "A" # Arbitrary field
         - flavor: "opensuse"
           node: "B"
    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.ova
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: config.yaml
      - name: Install deps
        run: |
          brew install cdrtools jq
      - run: |
              ls -liah
              ova=$(ls *.ova)
              sh start_vm.sh $ova $PWD/config.yaml